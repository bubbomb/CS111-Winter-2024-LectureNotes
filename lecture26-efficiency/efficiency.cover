       # import timeit
       
       
    1: def exp(b, n):
         if n == 0:
           return 1
         else:
           return b * exp(b, n-1)
       
       
    1: square = lambda x: x * x
    1: def exp_fast(b, n):
           if n == 0:
               return 1
           elif n % 2 == 0:
               return square(exp_fast(b, n//2))
           else:
               return b * exp_fast(b, n-1) 
       
    1: def overlap(a, b):
           """
           >>> overlap([3, 5, 7, 6], [4, 5, 6, 5])
           3
           """
           count = 0
           for item in a:
               for other in b:
                   if item == other:
                       count += 1
           return count
       
       
    1: def virfib(n):
2692537:     if n in {0,1}:
1346269:         return n
       
1346268:     total = virfib(n-1) + virfib(n-2)
1346268:     return total
       
       
    1: def cache_virfib(n, cache={}):
   59:     if not cache:
    1:        cache = {0:0, 1:1}
       
   59:     if n in cache:
   30:         return cache[n]
           else:
   29:        cache[n] = cache_virfib(n-1, cache) + cache_virfib(n-2, cache)
       
   29:     return cache[n]
       
              
          
       
    1: import timeit
    1: print('------------------------------------------------------')
       # print('------------ exp -------------')
       # num = 1
       # exponent = 150
       
       # print(f'num:{num}, exponent:{exponent}')
       # print(timeit.timeit(f'exp({num},{exponent})', globals=globals(), number=10000))
       # print(timeit.timeit(f'exp_fast({num},{exponent})', globals=globals(), number=10000))
       
       # print()
       # print('------------ overlap -------------')
       
       
       # list2 = [x for x in range(10)]
       # list1 = [x for x in range(10)]
       
       # print(timeit.timeit(f'overlap({list1}, {list2})', globals=globals(), number=1000))
       
    1: print('------------ virfib -------------')
       
    1: virfib_num = 30
       
    1: print(timeit.timeit(f'virfib({virfib_num})', globals=globals(), number=1))
    1: print(timeit.timeit(f'cache_virfib({virfib_num})', globals=globals(), number=1))
